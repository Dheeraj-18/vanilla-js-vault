//                                       ...............................................
//                                             SetTimeout and SetInterval
//                                            ..................................

// NOTE-1: the function setTimeout and setInterval are not a part of javascript i.e not specify in the Ecmascript it's a part of browser
//          a) these are web APIs like, alert , confirm.. both are HigherOrder function
//          b) In setTimeout() atleast one argument must pass otherwise show error

// NOTE-2: first argument pass in the setTimeout() is treated as js code behind the seen it convert the js code whatever we give in the first argument
//         and in the source tab it shows in another file not js file it generated by js engine eg. VM700:..

// Note: we delay our code by using setTimeout function by give a code or func as a argument and with timeout times in m sec

// NOTE-3: in the first argument either we pass a argument a string or a valid javascript code only we mostly in practice we pass only function in
//        first argument for seek or knowledge we know that we pass a valid code in string also .

// NOTE-4 : setTimeout(handler: TimerHandler, timeout)

// Note-5: when we call setTimeout it return value i.e timer ID when we call in the devtool console it show there , but when we use in vs code ID then
//         we store that timeID in variable so we use it further .

// Note-6: with the help of this  timer id if want to stop our setTimeout function execution we pass in the clearTimeout(timeID) then that fun run

// Note:7 we also clear the function  by either using clearTimeout or ClearInterval but use clearTimeout with setTimeout and clearInterval with
//       setInterval

// NOTE-8 if we pass other than two argument in the setTimeout() function it store in array argument which can be access by argument[2]
//        But now it deprecate form js so we not use too more

// NOte-9: in setTimeout( ) only first argument is must other are optional if we not set timeout it consider by itself 0

// NOTE-10:****** Question: when we set setTimeout zero then which code run first setTimeout or a js code ?
//         answer: our Javascript is synchronous language so js code synchronous and setTimeout ans setInterval is async code so first execute sync
//                 code 

// NOTE-11: setInterval() it work similar to setTimeout in the setTimeout it run only ones after timeout but in the setInterval() code run
//           continuously in the give timeout period







const timer1 = setTimeout(`console.log("Hi-1") `, 1000) // 1000 ms or 1sec
const timer2 = setTimeout(`console.log("Hi-2") `) // not give timeout consider by itself zero and it run before Hi-1 and (a ,300)
const timer3 = setTimeout(a, 3000) // Here setTimeout is Higher order function if we a() there in place of this undefined is return i.e setTimeout(undefined,3000)
// const timer3 = setTimeout(a, 3000,'Dheeraj',68,98)
// clearTimeout(timer1)

// clearInterval(timer2) we also clear the by either using clearTimeout or ClearInterval

function a() {
  // console.log(arguments[2]);
  console.log(`Hello world`)
}

console.log('I am js synchronous code so I run earlier than setTimeout')

setTimeout(function () {
    // debugger
  console.log(`I am anonymous fucntion`)
},1000)
  
